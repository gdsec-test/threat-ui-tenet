# Builds, tests and create docker image
# TODO: GD artificatory
#
# Requirements:
# - An initialized npm project with tests
#
# Example values:
# "version": "1.0.1",
# "scripts": {
#     "test": "mocha test.js"
# },
#

name: Update AWS Infrastructure

on:
  workflow_dispatch:
  push:
    branches: [main, develop]
    paths:
      - "sceptre/**"
      - ".github/workflows/sceptre.yml"

jobs:
  deploy-fargate-infrastructure:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
        
      - name: Set params for development env
        if: github.ref == 'refs/heads/develop'
        run: |
          echo "AWS_DEPLOY_SECRET_ACCESS_KEY_ID=${{ secrets.DEV_AWS_SECRET_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_DEPLOY_SECRET_TOKEN_VALUE=${{ secrets.DEV_AWS_SECRET_TOKEN_VALUE }}" >> $GITHUB_ENV
          echo "AWS_DEPLOY_ROLE=${{ secrets.DEV_AWS_DEPLOY_ROLE }}" >> $GITHUB_ENV
          echo "AWS_CLUSTER_SSL_CERT_ID=1b3a1268-3aec-4cd0-8204-4b07209e32fa" >> $GITHUB_ENV
          echo "NODE_ENV=development" >> $GITHUB_ENV
          echo "AWS_ENV=dev" >> $GITHUB_ENV
          echo "GD_ROOT_DOMAIN=dev-gdcorp.tools" >> $GITHUB_ENV

      - name: Set params for production env
        if: github.ref == 'refs/heads/main'
        run: |
          echo "AWS_DEPLOY_SECRET_ACCESS_KEY_ID=${{ secrets.PROD_AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_DEPLOY_SECRET_TOKEN_VALUE=${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_DEPLOY_ROLE=${{ secrets.PROD_AWS_DEPLOY_ROLE }}" >> $GITHUB_ENV
          echo "AWS_CLUSTER_SSL_CERT_ID=2d98481c-771c-4e6a-be56-c85a9941a40b" >> $GITHUB_ENV
          echo "NODE_ENV=production" >> $GITHUB_ENV
          echo "AWS_ENV=prod" >> $GITHUB_ENV
          echo "GD_ROOT_DOMAIN=gdcorp.tools" >> $GITHUB_ENV

      - name: Configure AWS credentials using Cloud Key Based Service Accounts
        uses: aws-actions/configure-aws-credentials@bab55d3830fe69833c9fecaa51fe2c829a7508f3
        with:
          aws-access-key-id: ${{ env.AWS_DEPLOY_SECRET_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_DEPLOY_SECRET_TOKEN_VALUE }}
          role-to-assume: ${{ env.AWS_DEPLOY_ROLE }}
          role-duration-seconds: 3600
          aws-region: us-west-2

      - name: Deploy / Update ECR sceptre deployment
        working-directory: ./sceptre
        env:
          AWS_CLUSTER_SSL_CERT_ID: ${{env.AWS_CLUSTER_SSL_CERT_ID}}
          NODE_ENV: ${{env.NODE_ENV}}
          GD_ROOT_DOMAIN: ${{env.GD_ROOT_DOMAIN}}
          AWS_ENV: ${{env.AWS_ENV}}
        run: |
          export
          sceptre launch -y iam-user-forensic-storage.yaml          
          sceptre launch -y ecr.yaml
          sceptre launch -y iam-role.yaml
          sceptre launch -y fargate-cluster.yaml
          sceptre launch -y fargate-service.yaml
          sceptre launch -y sns-moog.yaml
          sceptre launch -y cloudwatch-alarm.yaml
